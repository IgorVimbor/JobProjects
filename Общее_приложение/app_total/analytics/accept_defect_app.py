from datetime import datetime
import pandas as pd
import warnings
warnings.simplefilter(action="ignore", category=Warning)

import paths  # импортируем файл с путями до базы данных, отчетов и др.


year_now = paths.year_now  # текущий год
file = paths.file_database  # импортируем файл базы рекламаций ОТК с учетом текущего года

# ------------------------------- Создаем датафрейм из файла Excel базы ОТК -----------------------------------
df = pd.read_excel(
    file,
    sheet_name=str(year_now),
    usecols=[
        "Период выявления дефекта (отказа)",
        "Наименование изделия",
        "Количество предъявленных изделий",
        "Виновник дефекта - БЗА",
        "Виновник дефекта - потребитель",
        "Изделие соответствует  ТУ",
        "Виновник не установлен",
    ],
    header=1,
)
# header=1 - строку 2 таблицы ОТК делаем заголовками столбцов датафрейма (индексы строк начинаются с 0)

# изменяем наименование столбцов датафрейма
df.rename(
    columns={
        "Период выявления дефекта (отказа)": "Потребитель",
        "Наименование изделия": "Изделие",
        "Количество предъявленных изделий": "Количество",
        "Виновник дефекта - БЗА": "вин-БЗА",
        "Виновник дефекта - потребитель": "вин-Потребитель",
        "Изделие соответствует  ТУ": "вин-ТУ",
        "Виновник не установлен": "вин-НЕТ",
    },
    inplace=True,
)

# Создаем временную копию только на время операций
df_temp = df.copy()

# Выполняем все преобразования в одном блоке:
vin_columns = ['вин-БЗА', 'вин-Потребитель', 'вин-ТУ', 'вин-НЕТ']

# - рассчитываем значение для суммирования (количество * флаг), используя метод eq()
for col in vin_columns:
    df_temp[f"{col}_value"] = df_temp['Количество'] * df_temp[col].eq('+').astype(int)

# Группируем и суммируем
res_df = df_temp.groupby(['Потребитель', 'Изделие']).agg(
    Количество=('Количество', 'sum'),
    **{col: (f"{col}_value", 'sum') for col in vin_columns}
).reset_index()

# Преобразуем типы
res_df[vin_columns] = res_df[vin_columns].astype(int)
res_df['Количество'] = res_df['Количество'].astype(int)

# Удаляем временный датафрейм сразу после использования
del df_temp

# Создаем новые столбцы "Признано", "Отклонено", "Не поступало" и расчитываем значения в них
res_df["Признано"] = res_df["вин-БЗА"] + res_df["вин-НЕТ"]
res_df["Отклонено"] = res_df["вин-ТУ"] + res_df["вин-Потребитель"]
res_df["Не поступало"] = res_df["Количество"] - (res_df["Признано"] + res_df["Отклонено"])

# Выбираем только нужные столбцы
res_df = res_df[['Потребитель', 'Изделие', 'Количество', 'Признано', 'Отклонено', 'Не поступало']]

# записываем в файл TXT
date_new = datetime.today().strftime("%d-%m-%Y")  # сегодняшняя дата

file_txt = f"D:/РАБОТА/Количество признанных рекламаций_{date_new}.txt"
# file_txt = "//Server/otk/Support_files_не_удалять!!!/Количество признанных рекламаций.txt"

with open(file_txt, "w", encoding="utf-8") as f:
    print(
        f"\n\n\tСправка по количеству признанных рекламаций на {date_new}\n\n",
        file=f,
    )
    f.write(res_df.to_string())

# print("Справка в файл TXT записана")
