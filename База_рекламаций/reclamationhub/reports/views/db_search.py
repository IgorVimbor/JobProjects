from django.shortcuts import render, redirect
from django.contrib import messages
from django.http import FileResponse, Http404, HttpResponse
from django.views.decorators.csrf import csrf_exempt
import os

from reports.config.paths import get_db_search_txt_path
from reports.forms import DbSearchForm
from reports.modules.db_search_module import perform_search


# def db_search_page(request):
#     """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –º–æ–¥—É–ª—è '–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π'"""
#     context = {
#         "page_title": "–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π",
#         "module_name": "Database search",
#         "description": "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –±–∞–∑—ã —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π",
#         "status": "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
#     }
#     return render(request, "reports/db_search.html", context)


def db_search_page(request):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–¥—É–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π"""

    if request.method == "POST":
        return handle_search(request)

    # GET –∑–∞–ø—Ä–æ—Å - –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –æ—á–∏—Å—Ç–∏—Ç—å —Å–µ—Å—Å–∏—é
    if request.GET.get("clear") == "1":
        # –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∞ –∏–∑ —Å–µ—Å—Å–∏–∏
        request.session.pop("form_data", None)
        request.session.pop("search_results", None)
        request.session.pop("download_info", None)
        # –†–µ–¥–∏—Ä–µ–∫—Ç –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ clear
        return redirect("reports:db_search")

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –∏–∑ —Å–µ—Å—Å–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    form_data = request.session.get("form_data", {})
    form = DbSearchForm(initial=form_data) if form_data else DbSearchForm()

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Å–µ—Å—Å–∏–∏
    search_results = request.session.get("search_results", None)
    download_info = request.session.get("download_info", None)

    # –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ download_info –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
    if download_info:
        del request.session["download_info"]

    context = {
        "page_title": "–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π",
        "description": "–ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –Ω–æ–º–µ—Ä—É –¥–≤–∏–≥–∞—Ç–µ–ª—è –∏–ª–∏ –∞–∫—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏",
        "form": form,
        "search_results": search_results,
        "download_info": download_info,
    }
    return render(request, "reports/db_search.html", context)


def handle_search(request):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    form = DbSearchForm(request.POST)

    if not form.is_valid():
        # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        for field, errors in form.errors.items():
            for error in errors:
                messages.error(request, f"{form.fields[field].label}: {error}")
        return redirect("reports:db_search")

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
    year = form.cleaned_data["year"]
    engine_numbers_str = form.cleaned_data["engine_numbers"]
    act_numbers_str = form.cleaned_data["act_numbers"]

    # –°–û–•–†–ê–ù–Ø–ï–ú –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ —Å–µ—Å—Å–∏–∏
    request.session["form_data"] = {
        "year": year,
        "engine_numbers": engine_numbers_str,
        "act_numbers": act_numbers_str,
    }

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
    search_type = "detailed" if "detailed_search" in request.POST else "quick"

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
    result = perform_search(year, engine_numbers_str, act_numbers_str, search_type)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if result["success"]:
        if search_type == "quick":
            # –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å–µ—Å—Å–∏–∏
            messages.success(request, "‚úÖ –ü–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω")
            request.session["search_results"] = {
                "results": result["results"],
                "year": year,
                "engine_numbers": engine_numbers_str,
                "act_numbers": act_numbers_str,
            }
        else:
            # –î–µ—Ç–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
            messages.success(request, f"‚úÖ {result['message']}")
            request.session["download_info"] = {
                "message": result["full_message"],
                "filename": result["filename"],
                "records_count": result["records_count"],
            }
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        if result["message_type"] == "info":
            messages.info(request, result["message"])
        elif result["message_type"] == "warning":
            messages.warning(request, result["message"])
        else:
            messages.error(request, result["message"])

    # –†–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    return redirect("reports:db_search")


def download_search_report(request):
    """–û—Ç–∫—Ä—ã—Ç–∏–µ TXT —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–µ—á–∞—Ç–∏"""
    try:
        file_path = get_db_search_txt_path()

        if not os.path.exists(file_path):
            raise Http404("–§–∞–π–ª –æ—Ç—á–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")

        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
        with open(file_path, "r", encoding="utf-8") as file:
            report_content = file.read()

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—á–∞—Ç–∏
        html_content = f"""
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>–û—Ç—á–µ—Ç –ø–æ –±–∞–∑–µ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π</title>
            <style>
                body {{ margin: 2px 20px; font-family: monospace; }}
                .container {{ white-space: pre-wrap; display: inline-block; }}
                .print-btn {{ text-align: right; margin-bottom: 0; }}
                @media print {{ .print-btn {{ display: none; }} }}
            </style>
        </head>
        <body>
            <div class="container">
                {report_content}
                <div class="print-btn">
                    <button onclick="window.print()">üñ®Ô∏è –†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å</button>
                </div>
            </div>
        </body>
        </html>
        """

        return HttpResponse(html_content, content_type="text/html; charset=utf-8")

    except Exception:
        raise Http404("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞")
