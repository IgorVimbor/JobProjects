# Generated by Django 4.2.20 on 2025-08-01 19:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import reclamations.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sourcebook', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Reclamation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NEW', 'Новая'), ('IN_PROGRESS', 'В работе'), ('CLOSED', 'Закрыта')], default='NEW', max_length=50, verbose_name='Статус')),
                ('incoming_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Входящий № по ОТК')),
                ('message_received_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата поступления сообщения в ОТК')),
                ('sender', models.TextField(blank=True, null=True, verbose_name='Кто отправил сообщение')),
                ('sender_outgoing_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Исх. № отправителя')),
                ('message_sent_date', models.DateField(blank=True, null=True, verbose_name='Дата отправления сообщения')),
                ('product_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Номер изделия')),
                ('manufacture_date', models.CharField(blank=True, max_length=10, null=True, verbose_name='Дата изготовления')),
                ('purchaser', models.CharField(blank=True, max_length=200, null=True, verbose_name='Организация-приобретатель изделия')),
                ('consumer_act_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер акта приобретателя изделия')),
                ('consumer_act_date', models.DateField(blank=True, null=True, verbose_name='Дата акта приобретателя изделия')),
                ('country_rejected', models.CharField(blank=True, max_length=100, null=True, verbose_name='Государство, где забраковано изделие')),
                ('end_consumer', models.CharField(blank=True, max_length=200, null=True, verbose_name='Конечный потребитель')),
                ('end_consumer_act_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер акта конечного потребителя')),
                ('end_consumer_act_date', models.DateField(blank=True, null=True, verbose_name='Дата акта конечного потребителя')),
                ('engine_brand', models.CharField(blank=True, max_length=50, null=True, verbose_name='Марка двигателя')),
                ('engine_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер двигателя')),
                ('transport_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Транспортное средство')),
                ('transport_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер транспортного средства')),
                ('defect_detection_date', models.DateField(blank=True, null=True, verbose_name='Дата выявления дефекта изделия')),
                ('mileage_operating_time', models.CharField(blank=True, max_length=100, null=True, verbose_name='Пробег, наработка')),
                ('claimed_defect', models.TextField(verbose_name='Заявленный дефект изделия')),
                ('consumer_requirement', models.TextField(blank=True, null=True, verbose_name='Требование потребителя')),
                ('products_count', models.PositiveIntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Количество предъявленных изделий')),
                ('measures_taken', models.TextField(blank=True, null=True, verbose_name='Принятые меры по сообщению')),
                ('outgoing_document_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Исходящий № документа')),
                ('outgoing_document_date', models.DateField(blank=True, null=True, verbose_name='Дата исходящего документа')),
                ('letter_sending_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='Способ отправки принятых мер')),
                ('consumer_response', models.TextField(blank=True, null=True, verbose_name='Ответ потребителя на сообщение')),
                ('consumer_response_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Исходящий № ответа потребителя')),
                ('consumer_response_date', models.DateField(blank=True, null=True, verbose_name='Дата ответа потребителя')),
                ('product_received_date', models.DateField(blank=True, null=True, verbose_name='Дата поступления изделия')),
                ('product_sender', models.CharField(blank=True, max_length=200, null=True, verbose_name='Организация-отправитель изделия')),
                ('receipt_invoice_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер накладной прихода изделия')),
                ('receipt_invoice_date', models.DateField(blank=True, null=True, verbose_name='Дата накладной прихода изделия')),
                ('reclamation_documents', models.TextField(blank=True, null=True, verbose_name='Документы по рекламационному изделию')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('defect_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reclamations', to='sourcebook.perioddefect', verbose_name='Период выявления дефекта')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reclamations', to='sourcebook.product', verbose_name='Обозначение изделия')),
                ('product_name', models.ForeignKey(default=reclamations.models.get_default_product_type, on_delete=django.db.models.deletion.PROTECT, related_name='reclamations', to='sourcebook.producttype', verbose_name='Наименование изделия')),
            ],
            options={
                'verbose_name': 'Рекламация',
                'verbose_name_plural': 'Рекламации',
                'db_table': 'reclamation',
                'ordering': ['-message_received_date'],
                'indexes': [models.Index(fields=['status'], name='reclamation_status_a45700_idx'), models.Index(fields=['defect_period'], name='reclamation_defect__db10e8_idx'), models.Index(fields=['product', 'status'], name='reclamation_product_d1d44d_idx')],
            },
        ),
    ]
