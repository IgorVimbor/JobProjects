"""
Django settings for reclamationhub project.

Generated by 'django-admin startproject' using Django 4.2.20.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# Было:
# BASE_DIR = Path(__file__).resolve().parent.parent
# Нужно добавить еще один .parent, так как settings теперь в подпапке:
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-6!srs^69hwo#d3h5zdrf9b-i)#8f(dvd3g88r^ja_!yj%bf()v"

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True  # настройки перенесли в development.py и production.py

# ALLOWED_HOSTS = ["127.0.0.1"]

# INTERNAL_IPS = ["127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "debug_toolbar",
    "sourcebook.apps.SourcebookConfig",
    "reclamations.apps.ReclamationsConfig",
    "investigations.apps.InvestigationsConfig",
    "claims.apps.ClaimsConfig",
    "reports.apps.ReportsConfig",
    "core.apps.CoreConfig",
    "utils.apps.UtilsConfig",
]

# Добавляем порядок отображения приложений
ADMIN_APPS_ORDER = {
    "reclamations": 1,
    "investigations": 2,
    "sourcebook": 3,
    "reports": 4,
    "claims": 5,
    "auth": 6,
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

# Для разработки
# CSRF_TRUSTED_ORIGINS = ["http://localhost:8000"]

# Или если используете другой порт
# CSRF_TRUSTED_ORIGINS = ["http://localhost:8080"]

# Для продакшена добавьте ваш домен
# CSRF_TRUSTED_ORIGINS = ['http://192.168.0.191:8000']

# Это необходимо для безопасной обработки AJAX-запросов.
# Django использует CSRF-защиту, и эта настройка указывает, каким источникам можно доверять.
# После добавления этой строки перезапустите сервер Django.

ROOT_URLCONF = "reclamationhub.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.template.context_processors.csrf",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "reclamationhub.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# настройки базы данных
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "reclamation_db",  # имя основной БД
        "USER": "rh_user",  # пользователь
        "PASSWORD": "4043",  # пароль
        "HOST": "localhost",  # хост
        "PORT": "3306",  # порт (при необходимости)
    },
    # использовали SQLite (по умолчанию)
    # "default": {
    #     "ENGINE": "django.db.backends.sqlite3",
    #     "NAME": BASE_DIR / "db.sqlite3",
    # }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ru-RU"
TIME_ZONE = "Europe/Moscow"

USE_I18N = True
USE_TZ = True

DATE_FORMAT = "d.m.Y"  # изменяем формат вывода дат (дд.мм.гггг)
DATE_INPUT_FORMATS = [
    "%d.%m.%Y",  # дд.мм.гггг - для ввода пользователем
    "%Y-%m-%d",  # гггг-мм-дд - стандартный (оставляем для совместимости)
]
USE_L10N = False  # это важно, иначе DATE_FORMAT может не применяться


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# Настройки для статических файлов
STATIC_URL = "/static/"  # Относительный URL
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # папка для collectstatic
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]  # исходные статические файлы

# Настройки для медиафайлов
MEDIA_URL = "/media/"  # Относительный URL
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  # папка для загруженных файлов


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# # Явно переопределяем настройки аутентификации
# LOGIN_REDIRECT_URL = "/"
# LOGOUT_REDIRECT_URL = "/"
# LOGIN_URL = "/login/"

# # после авторизации пользователь попадает на главную страницу
# LOGIN_REDIRECT_URL = "home"

# # после выхода пользователь попадает на страницу авторизации
# LOGOUT_REDIRECT_URL = "users:login"

# # при попытке перейти на закрытую страницу неавторизованный пользователь будет перенаправлен
# LOGIN_URL = "users:login"

# # авторизация пользователей
# AUTHENTICATION_BACKENDS = [
#     "django.contrib.auth.backends.ModelBackend",  # стандартно по логину (username) и паролю (password)
#     "users.authentication.EmailAuthBackend",  # по e-mail (кастомный бэкенд)
# ]
