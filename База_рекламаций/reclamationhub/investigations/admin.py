from django.contrib import admin, messages
from django.contrib.admin import SimpleListFilter
from django.http import HttpResponseRedirect
from django.urls import path
from django.utils.safestring import mark_safe
from datetime import datetime

from reclamationhub.admin import admin_site
from reclamations.models import Reclamation
from .models import Investigation
from .forms import InvestigationAdminForm
from .views import add_group_investigation_view, add_invoice_out_view


class InvestigationYearListFilter(SimpleListFilter):
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≥–æ–¥—É —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ –≤ –∞–¥–º–∏–Ω–∫–µ InvestigationAdmin"""

    title = "–ì–æ–¥ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π"
    parameter_name = "reclamation__year"

    def lookups(self, request, model_admin):
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≥–æ–¥—ã –∏–∑ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é
        years = (
            Reclamation.objects.values_list("year", flat=True)
            .distinct()
            .order_by("-year")
        )
        return [(year, str(year)) for year in years]

    def queryset(self, request, queryset):
        if self.value():
            return queryset.filter(reclamation__year=self.value())
        return queryset

    def choices(self, changelist):
        # –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        current_year = datetime.now().year

        # –ï—Å–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –≤—ã–±—Ä–∞–Ω —Ç–µ–∫—É—â–∏–π –≥–æ–¥
        selected_value = self.value() or str(current_year)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–±–æ—Ä–∞
        for lookup, title in self.lookup_choices:
            yield {
                "selected": str(selected_value) == str(lookup),
                "query_string": changelist.get_query_string(
                    {self.parameter_name: lookup}
                ),
                "display": title,
            }


@admin.register(Investigation, site=admin_site)
class InvestigationAdmin(admin.ModelAdmin):

    class Media:
        css = {"all": ("admin/css/custom_admin.css",)}
        js = ("admin/js/custom_admin.js",)

    form = InvestigationAdminForm

    change_list_template = "admin/investigation_changelist.html"

    @admin.display(description="–†–µ–∫–ª–∞–º–∞—Ü–∏—è: ID –∏ –∏–∑–¥–µ–ª–∏–µ")
    def reclamation_display(self, obj):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ –≤ –∞–¥–º–∏–Ω–∫–µ (–≤ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏)"""
        return obj.reclamation.admin_display_by_reclamation()

    # reclamation_display.short_description = "–†–µ–∫–ª–∞–º–∞—Ü–∏—è (ID –∏ –∏–∑–¥–µ–ª–∏–µ)"

    @admin.display(description="–ù–æ–º–µ—Ä –∏–∑–¥–µ–ª–∏—è")
    def product_number_display(self, obj):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –∏–∑–¥–µ–ª–∏—è –∏–∑ –º–æ–¥–µ–ª–∏ reclamation"""
        return obj.reclamation.product_number

    @admin.display(description="–ù–æ–º–µ—Ä –∏ –¥–∞—Ç–∞ –∞–∫—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏")
    def act_reclamation_display(self, obj):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—Ç–µ–ª—è –≤ –∞–¥–º–∏–Ω–∫–µ"""
        return obj.reclamation.admin_display_by_consumer_act()

    # act_reclamation_display.short_description = "–ù–æ–º–µ—Ä –∏ –¥–∞—Ç–∞ –∞–∫—Ç–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏"

    @admin.display(description="–ü–µ—Ä–∏–æ–¥ –≤—ã—è–≤–ª–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–∞")
    def get_defect_period(self, obj):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—è "–ü–µ—Ä–∏–æ–¥ –≤—ã—è–≤–ª–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–∞" –∏–∑ –º–æ–¥–µ–ª–∏ reclamation"""
        return obj.reclamation.defect_period

    # get_defect_period.short_description = "–ü–µ—Ä–∏–æ–¥ –≤—ã—è–≤–ª–µ–Ω–∏—è –¥–µ—Ñ–µ–∫—Ç–∞"

    @admin.display(description="–í–∏–Ω–æ–≤–Ω–∏–∫ –¥–µ—Ñ–µ–∫—Ç–∞")
    def get_fault_display(self, obj):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∏–Ω–æ–≤–Ω–∏–∫–∞"""
        if obj.fault_type == Investigation.FaultType.BZA:
            return f"–ë–ó–ê ({obj.guilty_department})" if obj.guilty_department else "–ë–ó–ê"
        return obj.get_fault_type_display()

    # get_fault_display.short_description = "–í–∏–Ω–æ–≤–Ω–∏–∫ –¥–µ—Ñ–µ–∫—Ç–∞"

    @admin.display(description="–ö–æ–ø–∏—è –∞–∫—Ç–∞")
    def has_act_scan_icon(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –Ω–∞–ª–∏—á–∏—è —Å–∫–∞–Ω–∞"""
        if obj.has_act_scan:
            return mark_safe(
                f'<div style="display: flex; justify-content: center; align-items: center; height: 100%;">'
                f'<a href="{obj.act_scan.url}" '
                f'target="_blank" '
                f'style="font-size: 24px; text-decoration: none;" '
                f'title="–û—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω –∞–∫—Ç–∞">'
                f"üìÑ</a>"
                f"</div>"
            )
        return ""

    @admin.display(description="–ù–æ–º–µ—Ä–æ–∫ 8D (–ü–ö–î)")
    def has_pkd_number(self, obj):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ 8D (–ü–ö–î) –∏–∑ –º–æ–¥–µ–ª–∏ reclamation –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏"""
        return obj.reclamation.pkd_number

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ –ø–æ–ª—è –º–æ–¥–µ–ª–∏ Investigation
    list_display = [
        "act_number",
        "act_date",
        "reclamation_display",
        "product_number_display",
        "get_defect_period",
        "act_reclamation_display",
        "solution",
        "get_fault_display",
        "defect_causes",
        "defect_causes_explanation",
        "defective_supplier",
        "shipment_date",
        "recipient",
        "has_act_scan_icon",
        "has_pkd_number",
        "disposal_act_number",
        "disposal_act_date",
        "shipment_invoice_number",
        "shipment_invoice_date",
        "return_condition",
        "return_condition_explanation",
    ]

    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–µ–π
    fieldsets = [
        (
            "–ê–∫—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
            {
                "fields": [
                    "reclamation",
                    "act_number",
                    "act_date",
                    "act_scan",
                ],
            },
        ),
        (
            "–†–µ—à–µ–Ω–∏–µ –ø–æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏",
            {
                "fields": [
                    "solution",
                ],
            },
        ),
        (
            "–í–∏–Ω–æ–≤–Ω–∏–∫ –¥–µ—Ñ–µ–∫—Ç–∞ –∏ –ø—Ä–∏—á–∏–Ω—ã",
            {
                "fields": [
                    "fault_type",
                    "guilty_department",
                    "defect_causes",
                    "defect_causes_explanation",
                    "defective_supplier",
                ],
            },
        ),
        (
            "–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è",
            {
                "fields": [
                    "shipment_date",
                    "recipient",
                ],
                "classes": ["shipment-section"],
            },
        ),
        (
            "–£—Ç–∏–ª–∏–∑–∞—Ü–∏—è",
            {
                "fields": [
                    "disposal_act_number",
                    "disposal_act_date",
                ],
            },
        ),
        (
            "–û—Ç–≥—Ä—É–∑–∫–∞ (–≤–æ–∑–≤—Ä–∞—Ç) –∏–∑–¥–µ–ª–∏—è –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—é",
            {
                "fields": [
                    "shipment_invoice_number",
                    "shipment_invoice_date",
                    "return_condition",
                    "return_condition_explanation",
                ],
            },
        ),
    ]

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–µ—Ä—Ö—É –∏ —Å–Ω–∏–∑—É —Ñ–æ—Ä–º—ã
    save_on_top = True

    list_per_page = 10  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ

    # –ü–æ–ª—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    # list_filter = ['reclamation__year', "reclamation__defect_period", "reclamation__product__product_type"]
    list_filter = [
        InvestigationYearListFilter,
        "reclamation__defect_period",
        "reclamation__product__product_type",
    ]

    # –ü–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
    search_fields = [
        "act_number",  # –Ω–æ–º–µ—Ä –∞–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
        "reclamation__product__nomenclature",  # –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–¥–µ–ª–∏—è
        "reclamation__product_number",  # –Ω–æ–º–µ—Ä –∏–∑–¥–µ–ª–∏—è
        "reclamation__engine_number",  # –Ω–æ–º–µ—Ä –¥–≤–∏–≥–∞—Ç–µ–ª—è
    ]

    search_help_text = mark_safe(
        """
    <p>–ü–û–ò–°–ö –ü–û –ü–û–õ–Ø–ú:</p>
    <ul>
        <li>–ù–û–ú–ï–† –ê–ö–¢–ê –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø ‚Ä¢‚Ä¢‚Ä¢ –û–ë–û–ó–ù–ê–ß–ï–ù–ò–ï –ò–ó–î–ï–õ–ò–Ø</li>
        <li>–ù–û–ú–ï–† –ò–ó–î–ï–õ–ò–Ø ‚Ä¢‚Ä¢‚Ä¢ –ù–û–ú–ï–† –î–í–ò–ì–ê–¢–ï–õ–Ø</li>
    </ul>
    """
    )

    # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    ordering = ["reclamation"]

    def get_queryset(self, request):
        return (
            super()
            .get_queryset(request)
            .select_related(
                "reclamation",  # –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ pk —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏
                "reclamation__product",  # –¥–ª—è product –≤ admin_display_by_reclamation
                "reclamation__product_name",  # –¥–ª—è product_name –≤ admin_display_by_reclamation
            )
        )

    # –î–æ–±–∞–≤–ª—è–µ–º URL –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–π —Ñ–æ—Ä–º—ã
    def get_urls(self):
        urls = super().get_urls()
        custom_urls = [
            path(  # –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∞–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                "add_group_investigation/",
                self.add_group_investigation_view,
                name="add_group_investigation",
            ),
            path(  # –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–π –Ω–∞–∫–ª–∞–¥–Ω–æ–π —Ä–∞—Å—Ö–æ–¥–∞
                "add_invoice_out/",
                self.add_invoice_out_view,
                name="add_invoice_out",
            ),
        ]
        return custom_urls + urls

    def changelist_view(self, request, extra_context=None):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–≤–æ–¥–∞ –∞–∫—Ç–æ–≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–∫—É—â–µ–º—É –≥–æ–¥—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Ñ–∏–ª—å—Ç—Ä –ø–æ –≥–æ–¥—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_year_filter = "reclamation__year" in request.GET
        auto_year_filter = "reclamation__year__exact" in request.GET

        if user_year_filter and auto_year_filter:
            # –ö–æ–Ω—Ñ–ª–∏–∫—Ç! –£–¥–∞–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∏–ª—å—Ç—Ä
            request.GET = request.GET.copy()
            del request.GET["reclamation__year__exact"]

        elif not user_year_filter and not auto_year_filter:
            # –ù–∏–∫–∞–∫–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –≥–æ–¥
            current_year = datetime.now().year
            request.GET = request.GET.copy()
            request.GET["reclamation__year__exact"] = current_year

        return super().changelist_view(request, extra_context)

    # def add_group_investigation_view(self, request):
    #     """–ú–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∞–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è ... –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ views.py ..."""
    #     # –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è self, –∞ –≤–æ views.py –ø–∞—Ä–∞–º–µ—Ç—Ä admin_instance –≤ —Ñ—É–Ω–∫—Ü–∏–∏ -
    #     # —á–µ—Ä–µ–∑ –Ω–µ–≥–æ –ø–µ—Ä–µ–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ InvestigationAdmin –¥–ª—è –≤—ã–∑–æ–≤–∞ message_user.

    def add_group_investigation_view(self, request):
        """–ú–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –∞–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è - –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ views.py"""
        return add_group_investigation_view(self, request)

    # def add_invoice_out_view(self, request):
    #     """–ú–µ—Ç–æ–¥ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∫–ª–∞–¥–Ω–æ–π –æ—Ç–≥—Ä—É–∑–∫–∏ –∏–∑–¥–µ–ª–∏–π... –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤ views.py ..."""
    #     # –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è self, –∞ –≤–æ views.py –ø–∞—Ä–∞–º–µ—Ç—Ä admin_instance –≤ —Ñ—É–Ω–∫—Ü–∏–∏ -
    #     # —á–µ—Ä–µ–∑ –Ω–µ–≥–æ –ø–µ—Ä–µ–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ InvestigationAdmin –¥–ª—è –≤—ã–∑–æ–≤–∞ message_user.

    def add_invoice_out_view(self, request):
        """–ú–µ—Ç–æ–¥ –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∫–ª–∞–¥–Ω–æ–π –æ—Ç–≥—Ä—É–∑–∫–∏ –∏–∑–¥–µ–ª–∏–π - –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –≤—ã–∑–æ–≤ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ views.py"""
        return add_invoice_out_view(self, request)

    def get_form(self, request, obj=None, **kwargs):
        form = super().get_form(request, obj, **kwargs)

        # –î–µ–ª–∞–µ–º –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º
        form.base_fields["reclamation"].required = True

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ GET-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        if not obj and "reclamation" in request.GET:
            form.base_fields["reclamation"].initial = request.GET.get("reclamation")

        return form

    def response_add(self, request, obj, post_url_continue=None):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–∫—Ç–∞"""
        storage = messages.get_messages(request)
        storage.used = True  # –û—á–∏—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        self.message_user(request, f"{obj} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.", messages.SUCCESS)
        return super().response_add(request, obj, post_url_continue)

    def response_change(self, request, obj):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∞"""
        storage = messages.get_messages(request)
        storage.used = True  # –û—á–∏—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

        self.message_user(request, f"{obj} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω.", messages.SUCCESS)
        return super().response_change(request, obj)

    def save_model(self, request, obj, form, change):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ –Ω–∞ –∑–∞–∫—Ä—ã—Ç—É—é"""
        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä –∏ –¥–∞—Ç–∞ –∞–∫—Ç–∞, –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é
        super().save_model(request, obj, form, change)
        obj.reclamation.update_status_on_investigation()
        if obj.act_number and obj.act_date and not obj.reclamation.is_closed():
            self.message_user(request, f"–†–µ–∫–ª–∞–º–∞—Ü–∏—è {obj.reclamation} –∑–∞–∫—Ä—ã—Ç–∞")

    def delete_model(self, request, obj):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è"""
        reclamation = obj.reclamation  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
        # –£–¥–∞–ª—è–µ–º –æ–±—ä–µ–∫—Ç (—Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ delete –º–æ–¥–µ–ª–∏ Investigation)
        super().delete_model(request, obj)

        self.message_user(
            request, f"–°—Ç–∞—Ç—É—Å —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ {reclamation} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ'"
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –ø–∞–Ω–µ–ª—å "–î–µ–π—Å—Ç–≤–∏–µ / –í—ã–ø–æ–ª–Ω–∏—Ç—å"
    actions = ["edit_shipment"]

    @admin.action(description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å")
    def edit_shipment(self, request, queryset):
        """–î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–∫—Ç–∞"""
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏
        if queryset.count() > 1:
            self.message_user(
                request,
                "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–∫—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
                level="ERROR",
            )
            return

        # –ü–æ–ª—É—á–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é –∑–∞–ø–∏—Å—å
        investigation = queryset.first()

        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —Å–µ–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
        return HttpResponseRedirect(
            f"../investigation/{investigation.pk}/change/#shipment-section"
        )

    # edit_shipment.short_description = "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø–∏—Å—å"
