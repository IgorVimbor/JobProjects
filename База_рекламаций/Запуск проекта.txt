------------ Запуск проекта (если дефолтный settings.py) ---------------
python manage.py runserver

-------- Запуск в режиме разработки (settings/development.py) ----------
python manage.py runserver --settings=reclamationhub.settings.development

-------- Запуск в продакшене (settings/production.py) ------------------
python manage.py runserver 0.0.0.0:8000 --settings=reclamationhub.settings.production

-- При таком подключении используется сервер Django, который в production не подхватывает ститические файлы из папки static

------------ Порядок подключения -----------------
http://localhost:8000 - мой рабочий ПК

http://192.168.0.191:8000 (http://мой_IP:8000) - другие ПК в сети


----------------- Порядок ручного запуска с архитектурой Django + Nginx ------------------
-- Терминал 1 (Django):
Bash
✅ python manage.py collectstatic --settings=reclamationhub.settings.production
✅ python manage.py runserver 127.0.0.1:8000 --settings=reclamationhub.settings.production

-- Терминал 2 (Nginx):
cmd
cd C:\nginx-1.28.0
✅ .\nginx.exe

------------ Порядок подключения -----------------
✅ http://192.168.0.191 - другие ПК в сети (через Nginx)

✅ http://localhost - мой рабочий ПК (через Nginx)

-- Для отладки (только с моего ПК):
✅ http://127.0.0.1:8000 - напрямую Django

-- Внешний доступ к Django напрямую:
❌ http://192.168.0.191:8000 - заблокирован


-------------- Важные моменты -----------------
Порядок важен: Сначала Django, потом Nginx

Два окна терминала: Django будет работать в первом окне, а Nginx во втором

Проверка работы: После запуска обоих серверов откройте браузер и перейдите по адресу http://localhost

-------------- Для остановки серверов --------------
1. Остановите Nginx:
bash
✅ .\nginx -s stop

2. Остановите Django:
✅ Ctrl+C в окне, где работает Django
