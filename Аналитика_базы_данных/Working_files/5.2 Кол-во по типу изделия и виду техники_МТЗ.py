import pandas as pd
import matplotlib.pyplot as plt
import warnings
import sys

sys.path.insert(0, "E:/MyRepositories/JobProjects/Аналитика_базы_данных/functions/")
from out_dataframe import MyFrame


# Команда для удаления предупреждений Pandas в консоли
warnings.simplefilter(action="ignore", category=Warning)
# То есть предупреждения типа:
""" A value is trying to be set on a copy of a slice from a DataFrame.
    Try using .loc[row_indexer,col_indexer] = value instead  """
# не будут показываться
# -----------------------------------------------------------------------------------------------------------------------

# потребитель
client = "ММЗ - эксплуатация"
# изделие по которому будет формироваться отчет
product = "водяной насос"

df_2023 = MyFrame(2023, client, product).get_frame()  # (236, 7)

# список столбцов датафрейма
lst = df_2023.columns.values.tolist()
"""
['Месяц регистрации', 'Обозначение изделия', 'Дата изготовления изделия', 
'Транспортное средство (установка)', 'Пробег, наработка', 
'Причины возникновения дефектов', 'Пояснения к причинам возникновения дефектов', 
'Поставщик дефектного комплектующего']
"""
# -----------------------------------------------------------------------------------------------------------------------

# оставляем в датафрейме строки, которые НЕ содержат "Амкодор" и НЕ пустые
df = df_2023[
    (df_2023["Транспортное средство (установка)"].str.contains("Амкодор") == False)
    & (df_2023["Транспортное средство (установка)"].isna() == False)
]

# в стобце 'Транспортное средство (установка)' убираем дефисы и пробелы
df["Транспортное средство (установка)"] = df["Транспортное средство (установка)"].apply(
    lambda x: "".join(x.replace("-", "").split())
)
# print(df[['Обозначение изделия', 'Транспортное средство (установка)']])

# группируем по типу транспортного средства и считаем количество по типу транспорта и сортируем по убыванию,
df_gr = (
    df.groupby("Транспортное средство (установка)")["Транспортное средство (установка)"]
    .count()
    .sort_values(ascending=False)
)
print(df_gr)
"""
Транспортное средство (установка)
Беларус1221.3              34
Беларус82.1                17
Беларус1523.3              11
Беларус1025.3               7
Беларус1221.2               6
Беларус1523                 3
МТЗ82.1                     2
Беларус952.3                2
Беларус921.3                2
Беларус82.3                 2
Беларус2022.3               2
Беларус320.4                1
МТЗ1220                     1
пассажирскийвагон           1
автобетоносмеситель         1
ТракторМУ320                1
МУ320                       1
Беларус1222.3               1
МТЗ82                       1
МТЗ1523                     1
КЗС10                       1
Беларус320.4МК              1
Бетоносмеситель             1
Бетономешалка               1
Беларус1521.2               1
Беларус1221                 1
Беларус2022В                1
Беларус320.4МУ              1
тракторАгромаш90ТГ2047М     1
"""

# группируем по обозначению изделия и считаем количество по типу транспортного средства и сортируем
df_gr_1 = (
    df.groupby("Обозначение изделия")["Транспортное средство (установка)"]
    .count()
    .sort_values(ascending=False)
)
print(df_gr_1)
"""
2024
Обозначение изделия
260-1307116-02       23
260-1307116-15       15
240-1307010-А1       11
3LD-1307010-Б         9
245-1307010-А1-11     4
245-1307010-А1        1
245-1307010-А1-10     1
260-1307116-05        1
260-1307116-06        1
260-1307116-М         1

2023
Обозначение изделия
260-1307116-02       46
240-1307010-А1       22
245-1307010-А1-11    15
260-1307116-15       12
3LD-1307010-Б         6
260-1307116-06        3
240-1307010-А1-02     1
260-1307116-03        1
"""
# df_gr_2 = (
#     df.groupby("Обозначение изделия")["Транспортное средство (установка)"]
#     .count()
#     .sort_values(ascending=False)
# )
# print(df_gr_2)
"""
# сохраняем итоговые таблицы в файл
with open('//Server/otk/ПРОГРАММА КАЧЕСТВА и ЦЕЛИ по КАЧЕСТВУ/Программа качества и мероприятия на год/2024/График ММЗ.txt', 'a') as file:
    print('\nОбщие данные за 2023 год\n\n', res_2023, file=file)
    print(file=file)
    print('\nДанные по Амкодору за 2023 год\n\n',res_amkodor, file=file)
print('Файл записан')

# строим график для визуализации
res_2023.plot(kind='line')
# plt.show()
"""
